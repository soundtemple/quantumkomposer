//# MOZAIC KOMPOSER SUITE
//# KONTROLLER APP
//# Handles messages to all connected instances for:
//# Synchronised scene change... and other stuff 
@OnLoad
	SetShortName {KNTRL} 
	ShowLayout 2
	LabelPads {_QK:KNTRL}
	if unassigned scene_durs //# duration in first scene
		ResetNoteStates FALSE // #reset the locker with the value FALSE!
		mode = 0 //# 0Scenes, 1Channels, 2Kontrol, 3Autom., 4LFOS
		songmode = 0 //# 0:Playsong 1:SceneLocked 2:ChordLocked
		edit_mode_active=FALSE
		edit_chan=0
		kntrl_instance_num=0 //# each instance of KORDS, NOTES & BEATS should have a unique num
 		SetMetroPPQN 4
		ppqn = 4
		edit_scene=0
		locked_to_scene=0
		scene_change_requested = -1 //# on pad down has next scene number
		in_mode_select = FALSE //# Toggle for changing modes mode
		number_of_modes = 16 //# Change in operational mode 
		return_to_song_mode_requested = FALSE //# used for switching on new bar 
		curr_chan=0 //# 0-15 KNTRL channel 0 default _:QK instances
		Call @InitKnobVariables //# All knob settings on start
		Call @SetupKnobset0
		Call @SetupLayoutScenes
	endif
@End

@InitKnobVariables
	//# Any knobset knob should have a setting here
	current_scene = 0 // #0-7 Pads 0-7
	scene_durs=[4,8,0,0,0,0,0,0]
	scene_names=[0,1,2,3,4,5,6,7]
	global_swing=0
	scene_preset=0
	//# Color Scheme
	col_scene = 2
	col_sel_scene = 4
	col_edit_scene = 3
	col_pending = 3
	loop_col = 6
	col_del_chord = 1
	col_mode_select = 6 //# Mode selection buttons
	col_unused = 0
	//# cc numbers used for communication with _:QK instances on CH1
	//# cc's 0-7 are for scene duration
	cc_rtn_to_song_mode=9
	cc_swing=10
	
	//MIDI KONTROL DATA STRUCTURE
	//channels 0-16 with 0 being top level access to each actual channel
	ch_labels=[] //#top level and for each of the 16 channel elements
	ch_colors=[]
	ch_midi_chs=[] //# top level channel attribute
	ch_types=[] //# top level channel attribute
	ch_vals=[] //# the midi val sent chs 1-16 not ch0 (top level)
	ch_ccs=[] //# midi cc num sent chs 1-16 not ch0 (top level)
	ch_mins=[] //# range parameter for the val attribute
	ch_maxs=[] //# range parameter for the val attribute
	ch_lsb=[] //# specific to pgm change msg
	ch_msb=[] //# specific to pgm chagen msg
	FillArray ch_colors, col_unused, 16*16 //default channels to color1
	FillArray ch_maxs, 127, 16*16 //# default the max cc range to 127
@End

@OnHostStart
	//# keep track of scene progress
	Log HostBar, { : }, HostBeat, { = }, (HostBeatsPerMeasure * HostBar) + HostBeat
	if (HostBeat = 0) and (HostBar = 0)
		//# starting playback from beginning		
		scene_beat_count = -1
		scene_changed = FALSE
		if (songmode = 0)
			current_scene = 0
		endif
	else
		//# continuing playback
		scene_completed_bars = scene_beat_count % HostBeatsPerMeasure
		scene_beat_count = scene_completed_bars + HostBeat
	endif
	Log {---- Host Started ----}
@End

@OnHostStop
  scene_beat_count = 0
  Log {---- Host Stopped ---- }, scene_beat_count, { - }
@End 


@OnNewBeat
	//# increment beat counts xonb
	scene_beat_count = scene_beat_count + 1
	//# Handle Scene and Chord changes
	current_scene_duration = scene_durs[current_scene]  * HostBeatsPerMeasure //# IN BEATS!
	current_host_beat = (HostBar * HostBeatsPerMeasure) + HostBeat
	
	if (scene_change_requested > -1) and (HostBeat = 0)
		//# user requested scene change and its a new bar (& return to song)
		//# Log {Handling scene change request. It a new bar}
		Call @HandleSceneChange
	elseif (scene_beat_count >= current_scene_duration)
		//# its time to increment scene
		Call @HandleSceneChange
	endif
	Call @LogCurrentInfo
@End

@OnNewBar
@End

@OnShiftDown
	//# xosd
	if in_mode_select //# Exit SHIFT MODE
		in_mode_select = FALSE	
		if mode=0		
			Call @SetupLayoutScenes
		elseif mode=1
			Call @SetupLayoutChannels
		elseif mode=2
			Call @SetupLayoutKntrl
		elseif mode=3
			Call @SetupLayoutAutom
		elseif mode=4
			Call @SetupLayoutLFOS
		endif  
	else //not in mode select
		Call @SetupSettingsLayout
	endif
	Call @UpdateCurrentKnobset
@End

@OnShiftUp
@End

@OnPadDown
	//# Pad Down actions
	if in_mode_select
		if (LastPad>=8 and LastPad<=12)
			Log {Mode not in use}
			Exit //# Not in use
		elseif LastPad=0
    	//# Return to song mode requested
    	return_to_song_mode_requested = TRUE
    	scene_change_requested = current_scene
    	in_mode_select = FALSE
    	songmode = 0
    	mode = 0
    	ColorPad 0, col_pending
	    ColorPad 8, col_pending
			LabelPads {_QK:KNTRL   PLAYBACK MODE: Loop whole song}
			Call @SetupKnobset0
			Call @SetupLayoutScenes
		elseif LastPad=1
		  in_mode_select = FALSE
			mode=0
			Call @SetupKnobset0
			Call @SetupLayoutScenes
		elseif LastPad=2
			edit_mode_active = NOT edit_mode_active
			Call @SetupSettingsLayout
		elseif LastPad=3
		  in_mode_select = FALSE
			curr_chan=1
			mode=2
			if edit_mode_active
				Call @SetupLayoutKntrl
				pad_slot=0
				Call @SetupKnobset2 //# KNTRL Mode Setup
			else
				Call @SetupKnobset7 //# KNTRL Mode _QK:Instance Knobs
				Call @SetupLayoutKntrl
			endif
		elseif LastPad=4
		  in_mode_select = FALSE
			mode=1
			Call @SetupKnobset1 //# Channels mode curr_chan
			Call @SetupLayoutChannels
		elseif LastPad=5
		  in_mode_select = FALSE
			mode=3
			if edit_mode_active
				Call @SetupKnobset4 //# AUTOM. SETUP stay in settings	
				Call @SetupLayoutAutom
			else
			  Call @SetupKnobset3 //# AUTOM. Mode for curr_chan
				Call @SetupLayoutAutom
			endif
		elseif LastPad=6
			mode=4
			if edit_mode_active
				Call @SetupKnobset6 //# LFO's
				Call @SetupLayoutLFOS
			else
				Call @SetupKnobset5 //# LFO's
				Call @SetupLayoutLFOS
			endif
		elseif LastPad=7
			Log {Not in use}
		elseif LastPad>=13 and LastPad<=15
			Call @HandleTransportRequest
		endif
	elseif NOT in_mode_select
		if mode=0  //SCENES MODE
			Call @PadDownScenesMode
		elseif mode=1 // channels mode
			Call @PadDownChannelsMode
		elseif mode=2 // kntrl mode
			Call @PadDownKntrlMode
		elseif mode=4 // lfo's mode
			Call @PadDownLFOSMode
		endif
	endif
@End

@PadDownScenesMode
	if mode=0 and (LastPad >= 0 and LastPad <= 7) //SCENES MODE
		Log { SCENE CHANGE REQUESTED }
		scene_change_requested = LastPad
		SendMIDICC 15, 8, LastPad
		songmode=1 //# Lock to selected scene
		edit_scene=LastPad
		locked_to_scene=LastPad
		if NOT HostRunning //# immediate change else newbeat/bar handles
			Call @HandleSceneChange 
		endif
		Call @SetupKnobset0
		Call @SetupLayoutScenes
	elseif mode=0 and LastPad>=13 and LastPad<=15
		Call @HandleTransportRequest
	elseif mode=0 and LastPad=8
		songmode=0 //# return to song mode
		SendMIDICC 15, cc_rtn_to_song_mode, 1
	elseif mode=0 and LastPad=9 //#update all scene durations
		for i = 0 to 7
			SendMIDICC 15, i, scene_durs[i]
		endfor
	endif
@End

@PadDownChannelsMode
	if edit_mode_active
		Log {Exit Edit mode to jump to channel}
		edit_chan = LastPad 
		Call @SetupKnobset1	
	else
		mode=2 //kontrol mode
		curr_chan = LastPad
		pad_slot=0
		if ch_types[curr_chan]=0 //_QK:instances 
			Call @SetupLayoutChannels
			Call @Setupknobset2
		else
		  Call @SetupLayoutChannels
			Call @Setupknobset2
		endif
	endif	
@End

@PadDownKntrlMode
	if curr_chan=0 and LastPad>=0 and LastPad<=7
		Log {Pad down in KNTRL mode _QK:CHANNEL}
	elseif curr_chan=0 and LastPad>=13 and LastPad<=15
		Call @HandleTransportRequest
	elseif curr_chan=0 and LastPad>=8 and LastPad<=12
		Log {This pad is unused atm in KNTRL channel _QK}
	else
		Log {Pad down on normal KNTRL Pad }
	endif
@End

@PadDownLFOSMode
	Log {Pad down in LFO's mode}
@End


@HandleTransportRequest
	//# Transport buttons handling
	if LastPad=13
		Log {Map to AUM rewind}
	elseif LastPad=14
		Log {Map to AUM stop}
	elseif lastPad=15
		Log {Map to AUM Play}
	endif
@End


@HandleSceneChange
	//# Work out which scene is next xhsc
	scene_changed = TRUE
  if scene_change_requested > -1
  	current_scene = scene_change_requested
  	if return_to_song_mode_requested
  		songmode = 0
			ColorPad current_scene, col_pending
		else
	  	songmode = 1 //# lock to scene if user requests
  	endif
  	return_to_song_mode_requested = FALSE
		scene_change_requested = -1
  elseif (songmode > 0)
  	current_scene = current_scene
  elseif (current_scene = 7) //# End of song. Loop back to beginning 
    current_scene = 0 
  elseif scene_durs[current_scene + 1] <= 0
  	//# also song end
  	current_scene = 0 //# no duration in next scene return to beginning
  else
		current_scene = current_scene + 1 //# Going to next
  endif
  scene_beat_count = 0
  Log {----- SCENE CHANGE -----}, {S}, current_scene+1
	Call @SetupLayoutScenes
@End

@LogCurrentInfo
	current_scene_duration = scene_durs[current_scene]
	Log {Playing: Scene: }, current_scene+1, { }, scene_beat_count+1, {/}, (current_scene_duration * HostBeatsPerMeasure), { beats}, { HostBeat: }, HostBeat+1
	LabelPads {Playing: Scene: }, current_scene+1, { }, scene_beat_count+1, {/}, (current_scene_duration * HostBeatsPerMeasure), { beats}, { HostBeat: }, HostBeat+1
@End

@SetupSettingsLayout
	// #Label all settings mode pads
	in_mode_select = TRUE
	ShowLayout 2
	LabelPads {_QK:KNTRL SETTINGS:   (shift to exit)}
	for i = 0 to 15
		ColorPad i, col_mode_select
		LatchPad i, NO
	endfor
	for i = 8 to 12
		ColorPad i, col_unused
	endfor
	if (songmode = 0)
			LabelPad 0, {PLAYSONG: Active }
		elseif (songmode = 1)
			LabelPad 0, {PLAYSONG: Scene locked}
		elseif (songmode = 2)
			LabelPad 0, {PLAYSONG: Chord locked}
		else
			LabelPad 0, {PLAYSONG: Disabled}
	endif
	LabelPad 1, {SCENES}
	if edit_mode_active
		LabelPad 2, {SETUP MODE ON}
		LabelPad 3, {_QK:KNTRL SETUP}
		LabelPad 4, {CHANNELS  SETUP}
		LabelPad 5, {AUTOM.    SETUP}
		LabelPad 6, {LFO's     SETUP}
	else 
		LabelPad 2, {SETUP MODE OFF}
		LabelPad 3, {_QK:KNTRL}
		LabelPad 4, {CHANNELS}
		LabelPad 5, {AUTOMATION}
		LabelPad 6, {LFO's}
	endif
	LabelPad 7, { }
	LabelPad 8, { }
	LabelPad 8, { }
	LabelPad 9, { }
	LabelPad 10, { }
	LabelPad 11, { }
	LabelPad 12, { }
	ColorPad 13, col_unused
	ColorPad 14, col_unused
	ColorPad 15, col_unused
	LabelPad 13, {<<RWD}
	LabelPad 14, {[STOP]}
	LabelPad 15, {PLAY>}
@End

@OnKnobChange
	if knob_set = 0 
	  Call @KnobChangeSet0 //# scene settings
  elseif knob_set = 1
  	Call @KnobChangeSet1 //# channel setup
  elseif knob_set = 2
  	Call @KnobChangeSet2	//# kontrol setup
  elseif knob_set = 3
  	Call @KnobChangeSet3	//# automation
  elseif knob_set = 4
  	Call @KnobChangeSet4	//# automation setup
  elseif knob_set = 5
  	Call @KnobChangeSet5	//# lfo's
  elseif knob_set = 6
  	Call @KnobChangeSet6	//# lfo setup
  elseif knob_set = 7
  	Call @KnobChangeSet7	//# _QK:INSTANCE kontrol knobs
  elseif knob_set = 8
  	Call @KnobChangeSet8	//# KONTROL KNOBS
  elseif knob_set = 9
  	Call @KnobChangeSet9	//# 
	endif
@End

@UpdateCurrentKnobset
	if knob_set = 0 
	  Call @SetupKnobset0 //# scene settings
  elseif knob_set = 1
  	Call @SetupKnobset1 //# channel setup
  elseif knob_set = 2
		pad_slot=0
  	Call @SetupKnobset2	//# kontrol setup
  elseif knob_set = 3
  	Call @SetupKnobset3	//# automation
  elseif knob_set = 4
  	Call @SetupKnobset4	//# automation setup
  elseif knob_set = 5
  	Call @SetupKnobset5	//# lfo's
  elseif knob_set = 6
  	Call @SetupKnobset6	//# lfo setup
  elseif knob_set = 7
  	Call @SetupKnobset7	//# _QK:INSTANCE kontrol knobs
  elseif knob_set = 8
  	Call @SetupKnobset8	//# KONTROL KNOBS
  elseif knob_set = 9
  	Call @SetupKnobset9	//# 
  endif
	//# On entering select mode the following need knobsets selected
	if in_mode_select	//# disable knobs in_mode_select
		LabelKnobs { }
		LabelKnob 0, { }
		LabelKnob 1, { }
		LabelKnob 2, { }
		LabelKnob 3, { }
		knob_set = 99 //# dummy number to disable
	endif
@End

@SetupKnobset0
	//# Scene settings
	knob_set = 0
	LabelKnobs {Scene setup}
	LabelKnob 0, {Scene }, edit_scene+1
	LabelKnob 1, {Bars }, scene_durs[edit_scene]
	LabelKnob 2, {Preset }, scene_preset+1
	LabelKnob 3, {G-Swing }, global_swing
	SetKnobValue 0, TranslateScale edit_scene, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale scene_durs[edit_scene], 0, 32, 0, 127
	SetKnobValue 2, TranslateScale scene_preset, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale global_swing, 0, 100, 0, 127 
@End

@KnobChangeSet0
	//# scene settings xs0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> edit_scene
			edit_scene = val
			SetKnobValue 1, TranslateScale scene_durs[edit_scene], 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		scn_duration = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32
		scene_durs[edit_scene] = scn_duration
		SendMIDICC 15, edit_scene, scene_durs[edit_scene] 
	endif
	if LastKnob = 2
		val = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
		if val <> scene_preset
			scene_preset = val
			CopyArray scene_presets[scene_preset*8], scene_durs, 8
			SetKnobValue 1, TranslateScale scene_durs[edit_scene], 0, 32, 0, 127
		endif
	endif
	if LastKnob = 3
		val = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
		if val <> global_swing
			global_swing = val
			SendMIDICC 15, cc_swing, global_swing
		endif
	endif
	scn_to_label = current_scene
	Call @SetupLayoutScenes
	LabelKnob 0, {Scene }, edit_scene+1
	LabelKnob 1, {Bars }, scene_durs[edit_scene]
	LabelKnob 2, {Preset }, scene_preset+1
	LabelKnob 3, {G-Swing }, global_swing
@End

@SetupKnobset1
	//# Channels Setup
	knob_set = 1
	LabelKnobs {CHANNELS SETUP }, edit_chan+1
	LabelPads {_QK:KNTRL --CHANNELS--}
	LabelKnob 0, {Label }, ch_labels[edit_chan]
	LabelKnob 1, {Color }, ch_colors[edit_chan]
	LabelKnob 2, {MidiCH }, ch_midi_chs[edit_chan]
	LabelKnob 3, {Type }, ch_types[edit_chan]
	SetKnobValue 0, TranslateScale ch_labels[edit_chan], 0, 32, 0, 127
	SetKnobValue 1, TranslateScale ch_colors[edit_chan], 0, 6, 0, 127
	SetKnobValue 2, TranslateScale ch_midi_chs[edit_chan], 0, 15, 0, 127
	SetKnobValue 3, TranslateScale ch_types[edit_chan], 0, 7, 0, 127 
@End

@KnobChangeSet1
	//# channels Setup
	if LastKnob = 0
		ch_labels[edit_chan] = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 32
		ch_pad_to_label=edit_chan
		Call @LabelChannelPadC
	endif
	if LastKnob = 1
		ch_colors[edit_chan] = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 6
		ColorPad LastPad, ch_colors[edit_chan]
	endif
	if LastKnob = 2
		ch_midi_chs[edit_chan] = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 15
		ch_pad_to_label=edit_chan
		Call @LabelChannelPadC
	endif
	if LastKnob = 3
		ch_types[edit_chan] = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 7
		Call @SetDefaultsForChType
		SetKnobValue 0, TranslateScale ch_labels[edit_chan], 0, 32, 0, 127
		SetKnobValue 1, TranslateScale ch_colors[edit_chan], 0, 7, 0, 127
		SetKnobValue 2, TranslateScale ch_midi_chs[edit_chan], 0, 15, 0, 127
	endif
	LabelKnob 0, {Label }, ch_labels[edit_chan]
	LabelKnob 1, {Color }, ch_colors[edit_chan]
	LabelKnob 2, {MidiCH }, ch_midi_chs[edit_chan]
	LabelKnob 3, {Type }, ch_types[edit_chan]
@End

@SetupKnobset2
	//# KNTRL Mode
	knob_set = 2
	LabelKnobs {KNTRL PAD }, pad_slot
	LabelPads {_QK:KNTRL --MIDI KONTROL SETUP CHANNEL }, curr_chan, {--}
	LabelKnob 0, {Label }, ch_labels[curr_chan*16]
	LabelKnob 1, {Color }, ch_colors[curr_chan*16]
	LabelKnob 2, {Value }, ch_vals[curr_chan*16]
	LabelKnob 3, {CC# }, ch_ccs[curr_chan*16]
	SetKnobValue 0, TranslateScale ch_labels[curr_chan*16], 0, 32, 0, 127
	SetKnobValue 1, TranslateScale ch_colors[curr_chan*16], 0, 6, 0, 127
	SetKnobValue 2, TranslateScale ch_vals[curr_chan*16], 0, 7, 0, 127
	SetKnobValue 3, TranslateScale ch_ccs[curr_chan*16], 0, 127, 0, 127
@End

@KnobChangeSet2
	//# KNTRL mode SETUP EDIT
	pad_slot=curr_chan*16+sel_pad
	if LastKnob = 0
		ch_labels[pad_slot] = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 32
		ch_pad_to_label=curr_chan
		Call @LabelChannelPadK
	endif
	if LastKnob = 1
		ch_colors[pad_slot] = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 6
		ColorPad LastPad, ch_colors[curr_chan*16+sel_pad]
	endif
	if LastKnob = 2
		ch_vals[pad_slot] = Round TranslateScale (GetKnobValue 2), 0, 127, ch_mins[pad_slot], ch_maxs[pad_slot]
		SendMIDICC ch_midi_chs[curr_chan], ch_ccs[pad_slot], ch_vals[pad_slot]
	endif
	if LastKnob = 3
		ch_ccs[pad_slot] = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 127
	endif
	LabelKnob 0, {Label }, ch_labels[pad_slot]
	LabelKnob 1, {Color }, ch_colors[pad_slot]
	LabelKnob 2, {Value }, ch_vals[pad_slot]
	LabelKnob 3, {CC# }, ch_ccs[pad_slot]
@End

@SetupKnobset3
	//# AUTOMATION Mode
	knob_set = 3
	LabelKnobs {AUTOMATION}
@End

@KnobChangeSet3
	//# AUTOMATION mode
@End

@SetupKnobset4
	//# AUTOMATION SETUP Mode
	knob_set = 4
	var=0
	LabelKnobs {AUTOM. SETUP}
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
	SetKnobValue 0, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
	SetKnobValue 2, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale var, 0, 100, 0, 127 
@End

@KnobChangeSet4
	//# AUTOMATION SETUP mode
	var=0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> var
			var = val
			SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		var = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32	
	endif
	if LastKnob = 2
		var = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
	endif
	if LastKnob = 3
		var = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
	endif
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
@End

@SetupKnobset5
	//# LFO's
	knob_set = 5
	var=0
	LabelKnobs {LFO'S}
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
	SetKnobValue 0, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
	SetKnobValue 2, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale var, 0, 100, 0, 127 
@End

@KnobChangeSet5
	//# LFO's  mode
	var=0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> var
			var = val
			SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		var = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32	
	endif
	if LastKnob = 2
		var = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
	endif
	if LastKnob = 3
		var = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
	endif
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
@End

@SetupKnobset6
	//# LFO SETUP Mode
	knob_set = 6
	var=0
	LabelKnobs {LFO SETUP}
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
	SetKnobValue 0, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
	SetKnobValue 2, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale var, 0, 100, 0, 127 
@End

@KnobChangeSet6
	//# LFO's  SETUP mode
	var=0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> var
			var = val
			SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		var = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32	
	endif
	if LastKnob = 2
		var = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
	endif
	if LastKnob = 3
		var = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
	endif
	LabelKnob 0, { }, var
	LabelKnob 1, { }, var
	LabelKnob 2, { }, var
	LabelKnob 3, { }, var
@End

@SetupKnobset7
	//# _QK:INSTANCE KONTROL
	knob_set = 7
	var=0
	LabelKnobs {KNTRL KNOBS}
	LabelKnob 0, {K1}, var
	LabelKnob 1, {K2}, var
	LabelKnob 2, {K3}, var
	LabelKnob 3, {K4}, var
	SetKnobValue 0, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
	SetKnobValue 2, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale var, 0, 100, 0, 127 
@End

@KnobChangeSet7
	//# _QK:INSTANCE KONTROL
	var=0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> var
			var = val
			SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		var = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32	
	endif
	if LastKnob = 2
		var = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
	endif
	if LastKnob = 3
		var = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
	endif
	LabelKnob 0, {K1}, var
	LabelKnob 1, {K2}, var
	LabelKnob 2, {K3}, var
	LabelKnob 3, {K4}, var
@End

@SetupKnobset8
	//# KONTROL KNOBS
	knob_set = 8
	var=0
	LabelKnobs {KONTROL KNOBS}
	LabelKnob 0, {LSB}, var
	LabelKnob 1, {MSB/MIN}, var
	LabelKnob 2, {Value}, var
	LabelKnob 3, {MAX}, var
	SetKnobValue 0, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
	SetKnobValue 2, TranslateScale var, 0, 7, 0, 127
	SetKnobValue 3, TranslateScale var, 0, 100, 0, 127 
@End

@KnobChangeSet8
	//# KONTROL KOBS
	var=0
	if LastKnob = 0
		val = Round TranslateScale (GetKnobValue 0), 0, 127, 0, 7
		if val <> var
			var = val
			SetKnobValue 1, TranslateScale var, 0, 32, 0, 127
		endif
	endif
	if LastKnob = 1
		var = Round TranslateScale (GetKnobValue 1), 0, 127, 0, 32	
	endif
	if LastKnob = 2
		var = Round TranslateScale (GetKnobValue 2), 0, 127, 0, 7
	endif
	if LastKnob = 3
		var = Round TranslateScale (GetKnobValue 3), 0, 127, 0, 100
	endif
	LabelKnob 0, {LSB}, var
	LabelKnob 1, {MSB/MIN}, var
	LabelKnob 2, {Value}, var
	LabelKnob 3, {MAX}, var
@End

@SetupLayoutScenes
	//#xsl setup layout for Scenes mode
	ShowLayout 2
	if mode=0 or mode=1
		//# Setup scene pads
		for i = 0 to 7
			if scene_durs[i] > 0
				ColorPad i, col_scene
				scn_to_label = i
				Call @LabelScenePad
			else
				ColorPad i, col_unused
				LabelPad i, { }
			endif
			LatchPad i, NO
	  endfor
		ColorPad current_scene, col_sel_scene
		ColorPad edit_scene, col_edit_scene
		if scene_change_requested>-1
			ColorPad scene_change_requested, col_pending
		endif
		for i = 8 to 15
			LatchPad i, NO
	    ColorPad i, col_unused
			LabelPad i, { }
		endfor
	elseif mode=2
		for i = 0 to 15
	  	ColorPad i, 2
			LabelPad i, {mode??}
		endfor
	endif
	if (songmode = 0)
		LabelPad 8, {PLAYSONG: Active }
		LatchPad 8, YES
	elseif (songmode = 1)
		LabelPad 8, {PLAYSONG: Locked S}, locked_to_scene+1
		LatchPad 8, NO
		LatchPad locked_to_scene, YES
	endif
	ColorPad 13, col_unused
	ColorPad 14, col_unused
	ColorPad 15, col_unused
	LabelPad 13, {<<RWD}
	LabelPad 14, {[STOP]}
	LabelPad 15, {PLAY>}
@End

@LabelScenePad
	//# Set scn_to_label var before calling
	sc_dur = scene_durs[scn_to_label]
	LabelPad scn_to_label, {S}, scn_to_label+1, { [}, sc_dur, { bars]}
@End

@SetupLayoutKntrl
	ShowLayout 2
	if curr_chan=0 //# _QK instances
		for i = 0 to 7
			kntrl_pad_to_label = i
			Call @LabelKntrlPad
		endfor
		for i = 8 to 12
			ColorPad i, col_unused
		endfor
		ColorPad 13, col_unused
		ColorPad 14, col_unused
		ColorPad 15, col_unused
		LabelPad 13, {<<RWD}
		LabelPad 14, {[STOP]}
		LabelPad 15, {PLAY>}
	else //# All other channels
		for i = 0 to 15
			kntrl_pad_to_label = i
			Call @LabelKntrlPad
		endfor
	endif
@End

@LabelKntrlPad
	ColorPad kntrl_pad_to_label, 5
	LabelPad kntrl_pad_to_label, {KNTRL:}, kntrl_pad_to_label
@End

@SetupLayoutAutom
	ShowLayout 1
	for i = 0 to 15
		ColorPad i, 2
		LabelPad i, {autom }, i
	endfor
@End

@SetupLayoutLFOS
	ShowLayout 2
	Log {Get LFO layout}
	for i = 0 to 15
		ColorPad i, 6
		LabelPad i, {LFOS }, i
	endfor
@End

@SetDefaultsForChType
	//Setup a default channel type
	if ch_types[edit_chan]=0 //_qk:instances
		LabelKnob 3, {_QK:}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [0,1,2,3,4,5,6,7,0,1,2,3,4,5,6,7]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=1 //synth channel
		LabelKnob 3, {INSTR}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=2 //audio bus channel
		LabelKnob 3, {BUS}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=3 //ruismaker drums
		LabelKnob 3, {RUISMKR}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=4 //synth only (no audio)
		LabelKnob 3, {SYNTH}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=5
		LabelKnob 3, {TBC1}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=6
		LabelKnob 3, {TBC2}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	elseif ch_types[edit_chan]=7
		LabelKnob 3, {TBC3}
		def_labels = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]
		def_colors = [7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7]
		def_vals =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_ccs =    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
		def_mins =   [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_maxs =   [127,127,127,127, 127,127,127,127, 127,127,127,127, 127,127,127,127]
		def_lsb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
		def_msb =    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	endif	
	CopyArray def_labels, ch_labels[edit_chan*16], 16
	CopyArray def_colors, ch_colors[edit_chan*16], 16
	CopyArray def_vals, ch_vals[edit_chan*16], 16
	CopyArray def_ccs, ch_ccs[edit_chan*16], 16
	CopyArray def_mins, ch_mins[edit_chan*16], 16
	CopyArray def_maxs, ch_maxs[edit_chan*16], 16
	CopyArray def_lsb, ch_lsb[edit_chan*16], 16
	CopyArray def_msb, ch_msb[edit_chan*16], 16
@End

@SetupLayoutChannels
	ShowLayout 2
	for i = 0 to 15
		ch_pad_to_label = i
		if mode=1 // Channels setup
			Call @LabelChannelPadC
			Log {labelling channels}
		else
		  Call @LabelChannelPadK
			Log {labelling pads}
		endif
	endfor
@End

@LabelChannelPadC // Channels mode - top level
	//Laborious task of labelling pads when you cant store a string
	ColorPad ch_pad_to_label, ch_colors[ch_pad_to_label]
	label_num = ch_labels[ch_pad_to_label]
	midi_ch = ch_midi_chs[ch_pad_to_label]
	if (label_num=0)
		LabelPad ch_pad_to_label, {_QK:KORDS }, {[}, midi_ch+1, {]}
	elseif (label_num=1)
		LabelPad ch_pad_to_label, {_QK:DRUMS }, {[}, midi_ch+1, {]}
	else
	  LabelPad ch_pad_to_label, {OUT OF RANGE }, {[}, midi_ch+1, {]}
	endif
@End

@LabelChannelPadK // Kontrol mode 16pads per channel
	//Laborious task of labelling pads when you cant store a string
	ColorPad ch_pad_to_label, ch_colors[(curr_chan*16) + ch_pad_to_label]
	label_num = ch_labels[(curr_chan*16) + ch_pad_to_label]
	midi_ch = ch_midi_chs[(curr_chan*16) + ch_pad_to_label]
	if (label_num=0)
		LabelPad ch_pad_to_label, {VOL}
	elseif (label_num=1)
		LabelPad ch_pad_to_label, {PAN}
	elseif (label_num=2)
		LabelPad ch_pad_to_label, {SEND A}
	elseif (label_num=3)
		LabelPad ch_pad_to_label, {SEND B}
	else
	  LabelPad ch_pad_to_label, {OUT OF RANGE }
	endif
@End