@OnLoad
	SetShortName {KNTRL} 
	ShowLayout 2
	LabelPads {_QK:KNTRL}
	if unassigned scene_bank //# duration in first scene
		ResetNoteStates FALSE // #reset the locker with the value FALSE!
		mode = 0 //# See @HandleModeChange for modes
		songmode = 0 //# 0:Playsong 1:SceneLocked 2:ChordLocked
		SetMetroPPQN 4
		ppqn = 4 
		scene_change_requested = -1 //# on pad down has next scene number
		in_mode_select = FALSE //# Toggle for changing modes mode
		number_of_modes = 16 //# Change in operational mode 
		return_to_song_mode_requested = FALSE //# used for switching on new bar 
		Call @InitKnobVariables //# All knob settings on start
		Call @SetupKnobset0
		Call @SetupLayout
	endif
@End

@InitKnobVariables
	//# Any knobset knob should have a setting here
	current_scene = 0 // #0-7 Pads 0-7
	sc_size=5
	durs=[4,8,0,0,0,0,0,0]
	for s = 0 to 7 
	  //# Create 8 scene arrays in scene_bank
	  scene_bank[s*sc_size] = [durs[s],0,0,0,0]
	endfor
	//# Color Scheme
	col_scene = 2
	col_sel_scene = 4
	col_pending = 3
	loop_col = 6
	col_del_chord = 1
	col_mode_select = 6 //# Mode selection buttons
	col_unused = 0
@End

@OnHostStart
	//# keep track of scene progress
	Log HostBar, { : }, HostBeat, { = }, (HostBeatsPerMeasure * HostBar) + HostBeat
	if (HostBeat = 0) and (HostBar = 0)
		//# starting playback from beginning		
		scene_beat_count = -1
		scene_changed = FALSE
		if (songmode = 0)
			current_scene = 0
		endif
	else
		//# continuing playback
		scene_completed_bars = scene_beat_count % HostBeatsPerMeasure
		scene_beat_count = scene_completed_bars + HostBeat
	endif
	Log {---- Host Started ----}
	Call @SetupLayout
@End

@OnHostStop
  scene_beat_count = 0
  Log {---- Host Stopped ---- }, scene_beat_count, { - }
  Call @SetupLayout
@End 


@OnNewBeat
	//# increment beat counts xonb
	scene_beat_count = scene_beat_count + 1
	//# Handle Scene and Chord changes
	current_scene_duration = scene_bank[current_scene * sc_size]  * HostBeatsPerMeasure //# IN BEATS!
	current_host_beat = (HostBar * HostBeatsPerMeasure) + HostBeat
	
	if (scene_change_requested > -1) and (HostBeat = 0)
		//# user requested scene change and its a new bar (& return to song)
		//# Log {Handling scene change request. It a new bar}
		Call @HandleSceneChange
	elseif (scene_beat_count >= current_scene_duration)
		//# its time to increment scene
		Call @HandleSceneChange
	endif
	Call @LogCurrentInfo
@End

@HandleSceneChange
	//# Work out which scene is next xhsc
	scene_changed = TRUE
  if scene_change_requested > -1
  	current_scene = scene_change_requested
  	if return_to_song_mode_requested
  		songmode = 0
			ColorPad current_scene, col_pending
		else
	  	songmode = 1 //# lock to scene if user requests
  	endif
  	return_to_song_mode_requested = FALSE
		scene_change_requested = -1
  elseif (songmode > 0)
  	current_scene = current_scene
  elseif (current_scene = 7) //# End of song. Loop back to beginning 
    current_scene = 0 
  elseif scene_bank[(current_scene * sc_size) + sc_size] <= 0
  	//# also song end
  	current_scene = 0 //# no duration in next scene return to beginning
  else
		current_scene = current_scene + 1 //# Going to next
  endif
  scene_beat_count = 0
  Log {----- SCENE CHANGE -----}, {S}, current_scene+1
	Call @SetupLayout
@End

@LogCurrentInfo
	current_scene_duration = scene_bank[current_scene * sc_size]
	Log {Playing: Scene: }, current_scene+1, { }, scene_beat_count+1, {/}, (current_scene_duration * HostBeatsPerMeasure), { beats}, { HostBeat: }, HostBeat+1
	LabelPads {Playing: Scene: }, current_scene+1, { }, scene_beat_count+1, {/}, (current_scene_duration * HostBeatsPerMeasure), { beats}, { HostBeat: }, HostBeat+1
@End

@OnPadDown
	//# Splitting this event into separate handlers xopd
	if in_mode_select
		if (LastPad>=2)
			Log {Mode not in use}
			Exit //# Not in use
		elseif (HostRunning and LastPad=0)
    	//# Return to song mode requested
    	return_to_song_mode_requested = TRUE
    	scene_change_requested = current_scene
    	in_mode_select = FALSE
    	songmode = 0
    	mode = 0
    	ColorPad 0, col_pending
	    ColorPad 8, col_pending
		else
			mode = LastPad
			Log {MODE:}, mode
			in_mode_select = FALSE
		endif
		Call @HandleModeChange
	elseif NOT in_mode_select
		//# handle scene/chord change xopds
		if (LastPad >= 0 and LastPad <= 7)
			//# Scene change
			Log { SCENE CHANGE REQUESTED }
			scene_change_requested = LastPad
			if NOT HostRunning //# immediate change else newbeat/bar handles
				Call @HandleSceneChange 
			endif
		endif
		Call @SetupLayout
	endif
@End

@HandleModeChange
	//# Handle Labels
	if mode = 0
		LabelPads {_QK:KNTRL   PLAYBACK MODE: Loop whole song}
		Call @SetupKnobset0
		songmode = 0
	endif
	Call @SetupLayout
@End


@SetupKnobset0
	//# Scene settings
	knob_set = 0
	LabelKnobs {Scene }, current_scene+1, { setup}
@End

@UpdateCurrentKnobset
	if knob_set = 0 
		Call @SetupKnobset0 //# scene settings
	endif
	//# On entering select mode the following need knobsets selected
	if in_mode_select
		//# disable knobs in_mode_select
		LabelKnobs { }
		LabelKnob 0, { }
		LabelKnob 1, { }
		LabelKnob 2, { }
		LabelKnob 3, { }
		knob_set = 99 //# dummy number to disable
	endif
@End

@OnKnobChange
	if knob_set = 0 
	  Call @KnobChangeSet0 //# scene settings
	endif 
@End 

@KnobChangeSet0
	//# scene settings
	scn_to_label = current_scene
	Call @LabelScenePad
@End

	
@OnShiftDown
	//# xosd
	if in_mode_select
		in_mode_select = FALSE
		LabelPads {_QK:KNTRL Scene: }, current_scene+1
		if (mode >= 1)
			mode = 0
			knob_set = 0
		endif		
		Call @SetupLayout
	else
		// #Mode selection for Knobs n Pads
		in_mode_select = TRUE
		LabelPads {_QK:KNTRL SETTINGS:   (shift to exit)}
		for i = 0 to 15
			ColorPad i, col_mode_select
			LabelPad i, { } //# empty label to overwrite chord info
			if i = 0
				LatchPad i, NO
				if (songmode = 0)
					LabelPad i, {PLAYSONG: Active }
				elseif (songmode = 1)
					LabelPad i, {PLAYSONG: Scene locked}
				elseif (songmode = 2)
					LabelPad i, {PLAYSONG: Chord locked}
				else
					LabelPad i, {PLAYSONG: Disabled}
				endif
			elseif i = 1
				LatchPad i, NO
				LabelPad i, {Scenes}
			elseif i = 2
				LatchPad i, NO
			elseif i = 3
				LatchPad i, NO
			elseif i = 4
				LatchPad i, NO
			endif
		endfor
	endif
	Call @UpdateCurrentKnobset
@End

@OnShiftUp
@End


@LabelScenePad
	//# Set scn_to_label var before calling
	sc_dur = scene_bank[scn_to_label * sc_size]
	LabelPad scn_to_label, {S}, scn_to_label+1, { [}, sc_dur, { bars]}
@End

@SetupLayout
	//#xsl setup layout pads
	if in_mode_select
		Exit
	else
		if mode=0 or mode=1
			//# Setup scene pads
			for i = 0 to 7
				if scene_bank[i * sc_size] > 0
			    ColorPad i, col_scene
					scn_to_label = i
					Call @LabelScenePad
		  	else
		  		ColorPad i, col_unused
		  		LabelPad i, { }
		  	endif
		    LatchPad i, NO
		  endfor
			ColorPad current_scene, col_sel_scene
			if scene_change_requested>-1
				ColorPad scene_change_requested, col_pending
			endif
			for i = 8 to 15
				LatchPad i, NO
		    ColorPad i, col_unused
				LabelPad i, { }
			endfor
		elseif mode=2
			for i = 0 to 15
		  	ColorPad i, 2
				LabelPad i, {mode??}
			endfor
		endif
	endif		
@End