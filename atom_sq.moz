@OnLoad
	SetShortName {ATOMSQ} 
	LabelPads {ATOM SQ REMAPPER}
	ShowLayout 2
	shift_a=0
	shift_b=0
	rhs_as_kntrl_kntrl=TRUE //RHS keys Kntrl kntrl OR sel channels
	curr_chan=4
	curr_mgen=0
	keys_as_keyboard_only=TRUE // don use ATOM is controller, just keyboard
	btn_ccs=[82,83,84,85,109,99]
	knob_vals = [90,90,90,90, 0,0,64,90]
	lhs_notes=[36,40,43,47, 48,52,55,59, 60,64,67,71, 72,76,79,83] //notes used. we copy a or b here
	lhs_notes_a=[36,40,43,47, 48,52,55,59, 60,64,67,71, 72,76,79,83] //chordds thru kords
	lhs_notes_b=[48,49,50,51,52,53,54,55, 24,30,36,42,48,54,60,66] // chromatic 4 segments. spec 4 drum comp 
	Call @LabelAllPads
@End

@OnPadDown
  if LastPad=2
		rhs_as_kntrl_kntrl = not rhs_as_kntrl_kntrl 
		Call @LabelAllPads
	elseif LastPad=12 or LastPad=13
		SendMIDICC 16, LastPad+89, 127 //Toggle RTN FX GUI's
	elseif LastPad=14 or LastPad=15
		SendMIDICC 16, 103, 127 // Toggle Master Bus Comp/Lim
	endif	
@End


@OnMidiCC
	if MIDIChannel=0 and MIDIByte2=1 //modwheel
		SendMIDIThruOnCh 15 // converts to active channel in kntrl
	elseif shift_a and MIDIChannel=0 and MIDIByte2=85 and MIDIByte3>0
	  SendMIDICC 15, 88, 127 //Transport shift_a & STOP ==> Send ALLLL midi off notes
	elseif MIDIChannel=0 and MIDIByte2=85 and MIDIByte3>0
	  SendMIDICC 15, 111, 127 //Transport STOP
	elseif MIDIChannel=0 and MIDIByte2=86 and MIDIByte3>0
		SendMIDICC 15, 112, 127 //Transport PLAY
	elseif MIDIChannel=0 and MIDIByte2=87
		shift_a=MIDIByte3 //use keys to select midi channel and switch to channel and show instr gui 
		Call @LabelAllPads 
	elseif MIDIChannel=0 and MIDIByte2=89
		shift_b=MIDIByte3 //use keys to select mgen guis 1-8
		Call @LabelAllPads
	elseif MIDIChannel=0 and MIDIByte2=102 //arrow key left - FREE
		//FREE
	elseif MIDIChannel=0 and MIDIByte2=103 //arrow key top - to KNTRL
		if MIDIByte3>0
			SendMIDICC 15, 104, 127
		endif
	elseif MIDIChannel=0 and MIDIByte2=104 //arrow key middle - KNTRL SHIFT
		if MIDIByte3>0
			SendMIDINoteOn 15, 16, 127
		endif
	elseif MIDIChannel=0 and MIDIByte2=105 //arrow key right - FREE
		//FREE
	elseif MIDIChannel=2 and (MIDIByte2>=24 and MIDIByte2<=29) //6 song btns used as shifted modes
		if MIDIByte3 > 0 //goto mutes, solos, arms, atoms1, aum, FREE
			SendMIDICC 15, btn_ccs[MIDIByte2-24], MIDIByte3
		endif
	elseif MIDIChannel=15 and (MIDIByte2>=101 and MIDIByte2<=108)  //btns A-H Set using editor
	  if MIDIByte3>0
			SendMIDICC 15, 100, MIDIByte2-101
		endif
	else
	  SendMIDIThru 
		if MIDIByte2>=76 and MIDIByte2<=81
			knob_vals[MIDIByte2-76]=MIDIByte3
			Call @LabelAllPads
		elseif MIDIByte2=118 or MIDIByte2=119
			knob_vals[MIDIByte2-112]=MIDIByte3
			Call @LabelAllPads
		elseif MIDIByte2=86 or MIDIByte2=87
			knob_vals[MIDIByte2-80]=MIDIByte3
			Call @LabelAllPads
		endif
	endif
@End

@OnMidiNote
	if keys_as_keyboard_only 
		SendMIDIThruOnCh 15
	elseif shift_a and shift_b and MIDIByte2<=15 and MIDIChannel=15 and shift_a and shift_b
	  SendMIDIThruOnCh 0 // Trigger Drum Computer patterns manually
		Log {SHIFT A & B ACTIVE: Use KNTRL PADS to trigger Drum Computer Patterns}
	elseif shift_a and MIDIChannel=15 and MIDIByte2<=15 and MIDIByte3>0 //KEYS OUT MIDI CH + switch to instr.
		if MIDIByte2 = curr_chan //sel chan pad twice - toggle instr gui
			SendMIDICC 15, 124, 127
		endif
		SendMIDICC MIDIChannel, MIDIByte2+24, 127
		curr_chan = MIDIByte2
		Call @LabelAllPads
		if curr_chan<=3
			CopyArray lhs_notes_b, lhs_notes, 16
		else
		  CopyArray lhs_notes_a, lhs_notes, 16
		endif
	elseif shift_b and MIDIByte2<=7 and MIDIChannel=15 and MIDIByte3>0
		Log {SHIFT B ACTIVE. MGEN TIME!} //switch MGEN GUI
		if MIDIByte2 = curr_mgen //sel chan pad twice - toggle instr gui
			SendMIDICC 16, MIDIByte2+91, 127
			Log {TOGGLING MGEN GUI}, MIDIByte2 
		endif
		SendMIDICC MIDIChannel, 90, MIDIByte2 //goto mgen kntrl and select mgen device #
		Log {sending the midi cc90 val}, MIDIByte2
		curr_mgen=MIDIByte2
		Call @LabelAllPads
	elseif MIDIByte2>=16 and MIDIByte2<=31 // LHS Special Notes Mode
		if MIDICommand=0x90
			Log {sending note on}
			SendMIDINoteOn curr_chan, lhs_notes[MIDIByte2-16], MIDIByte3
		elseif MIDICommand=0x80
			Log {sending note off}
			SendMIDINoteOff curr_chan, lhs_notes[MIDIByte2-16], MIDIByte3
		endif
	elseif MIDIByte2>=31 // LHS Notes Mode regular
		SendMIDIThruOnCh curr_chan
	elseif (not rhs_as_kntrl_kntrl) and MIDIByte2<=15 and MIDIChannel=15 and not (shift_a or shift_b) //rhs keys ch sel mode
		if MIDIByte3>0
			if MIDIByte2 = curr_chan //sel chan pad twice - toggle instr gui
				SendMIDICC 16, 124, 127
			endif
			SendMIDICC MIDIChannel, MIDIByte2+24, 127
			curr_chan=MIDIByte2
			Call @LabelAllPads
			if curr_chan<=3
				CopyArray lhs_notes_b, lhs_notes, 16
			else
			  CopyArray lhs_notes_a, lhs_notes, 16
			endif
		endif
	elseif rhs_as_kntrl_kntrl and MIDIByte2<=15 and MIDIChannel=15 and not (shift_a or shift_b) //rhs keys kntrl kntrl mode
		SendMIDIThru
	endif
@End

@OnMidiInput
	if MIDICommand=0xD0 or MIDICommand=0xE0 //Aftertouch or pitchbend
		SendMIDIThruOnCh curr_chan
	endif
@End


@LabelAllPads
	LabelPad 0, { ____}, curr_chan+1, {____},{ KEYS OUT}
	if shift_a and shift_b
	  LabelPad 1, {___SHIFT___},{ A&B DC PATTERNS}
	elseif shift_a
		LabelPad 1, {___SHIFT___},{ MID CH SEL}
	elseif shift_b
		LabelPad 1, {___SHIFT___},{ MGEN GUIS}
	else
	  LabelPad 1, {___SHIFT___},{ OFF }
	endif
	if not rhs_as_kntrl_kntrl
		LabelPad 2, {___RKEYS__},{ CH SEL}
	else 
		LabelPad 2, {___RKEYS__},{ KNTRL}
	endif
	LabelPad 3,  {___BTNSA__ }, {M - S - A}
	LabelPad 4,  {___BTNSB__ }, {SQ-AUM-???}
	LabelPad 5,  {___ARROW__ }, {K-?-KShft-?}
	LabelPad 8,  {___MIXA___ }, knob_vals[0]
	LabelPad 9,  {___MIXB___ }, knob_vals[1]
	LabelPad 10, {___MIXC___ }, knob_vals[2]
	LabelPad 11, {___MIXD___ }, knob_vals[3]
	LabelPad 12, {___RTNA___ }, knob_vals[4]
	LabelPad 13, {___RTNB___ }, knob_vals[5]
	LabelPad 14, {___MGAIN__ }, knob_vals[6]
	LabelPad 15, {___MVOL___ }, knob_vals[7]
@End