// LP>QK An adapter script for Launchpad mini
// Especially for use when in programmer mode
// Companion app to =>LP which is used for LED feedback
// Routing: LP Controller => LP Adapter => Instruments

@OnLoad
	ppqn=4
	SetShortName {LP2QK}
	if Unassigned msg_type
		Log {LP2K - Handles messages from Launchpad. Adapts messages and forward messages}
		lp_ch=0
		//SYSEX
		lp_sysex_header=[0xF0,0x00,0x20,0x29,0x02,0x0D]
		qk_sysex_header=[0x3F,0x40,0x3F,0x40,0x3F,0x40]
		cmd_lp_mode=0 //see below for mode #'s'
		cmd_brightness=8 //0-127
		cmd_sleep=9 //0=off; 1=on
		pgmr_mode=127
		drum_mode=4
		keys_mode=5
		user_mode=6
  	len_header=6
		lp_modes=[pgmr_mode, drum_mode, keys_mode, user_mode]
		new_mode=pgmr_mode
		Call @ConfigureLaunchapd
		Call @SetupMozaicLayout
	endif
@End

@ConfigureLaunchapd
	//These arrays are setup to match the launchpad layout 9x9 (including top row and scene pads)
	msg_type[91] = [1,1,1,1, 1,1,1,1, 1] //msg type to send on pad press/release 1=cc_msg; 0=note
	msg_type[81] = [1,1,1,1, 1,1,1,1, 1]  
	msg_type[71] = [0,0,0,0, 0,0,0,0, 1]
	msg_type[61] = [0,0,0,0, 0,0,0,0, 1]
	msg_type[51] = [1,1,1,1, 1,1,1,1, 1]
	msg_type[41] = [1,1,1,1, 1,1,1,1, 1]
	msg_type[31] = [0,0,0,0, 0,0,0,0, 1]
	msg_type[21] = [0,0,0,0, 0,0,0,0, 1]
	msg_type[11] = [1,0,0,1, 1,1,1,1, 1]
	
	msg_num[91] = [99,32,0,5,   -1,-1,-1,-1, -1] //msg num to send on press and release
	msg_num[81] = [91,92,93,94, 95,96,97,98, 109] 
	msg_num[71] = [20,21,22,23, 24,25,26,27, 110]
	msg_num[61] = [28,29,30,31, 32,33,34,35, 111]
	msg_num[51] = [24,24,24,24, 24,24,24,24, 112]
	msg_num[41] = [24,24,24,24, 24,24,24,88, 113]
	msg_num[31] = [0,1,2,3,     4,5,6,7,     114]
	msg_num[21] = [8,9,10,11,   12,13,14,15, 115]
	msg_num[11] = [25,16,36,26, 27,28,29,30, 116]
	
	on_val[91] = [127,127,127,127,  -1, -1, -1, -1, -1] //msg value to send on press if >=0
	on_val[81] = [127,127,127,127, 127,127,127,127, 127]
	on_val[71] = [127,127,127,127, 127,127,127,127, 127]
	on_val[61] = [127,127,127,127, 127,127,127,127, 127]
	on_val[51] = [0,  1,  2,  3,   4,  5,  6,  7,   127]
	on_val[41] = [8,  9,  10, 11,  12, 13, 14, 15,  127]
	on_val[31] = [127,127,127,127, 127,127,127,127, 127]
	on_val[21] = [127,127,127,127, 127,127,127,127, 127]
	on_val[11] = [127,127,127,127, 127,127,127,127, 127]
	
	off_val[91] = [-1,-1,-1,-1, -1,-1,-1,-1, -1] //msg value to send on pad release if >= 0
	off_val[81] = [-1,-1,-1,-1, -1,-1,-1,-1, -1] 
	off_val[71] = [0,  0, 0, 0,  0, 0, 0, 0, -1]
	off_val[61] = [0,  0, 0, 0,  0, 0, 0, 0, -1]
	off_val[51] = [-1,-1,-1,-1, -1,-1,-1,-1, -1]
	off_val[41] = [-1,-1,-1,-1, -1,-1,-1,-1, -1]
	off_val[31] = [0,  0, 0, 0,  0, 0, 0, 0, -1]
	off_val[21] = [0,  0, 0, 0,  0, 0, 0, 0, -1]
	off_val[11] = [-1, 0, 0,-1, -1,-0, 0, 0, -1]
	
	out_ch[91] = [15,15,15,15, 15,15,15,15, 15] //the midi channel to send msg on
	out_ch[81] = [15,15,15,15, 15,15,15,15, 15] 
	out_ch[71] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[61] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[51] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[41] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[31] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[21] = [15,15,15,15, 15,15,15,15, 15]
	out_ch[11] = [15,15,15,15, 15,15,15,15, 15]
@End

@OnMidiNote
	//Midi note messages from LP converted to...
	mb2=MIDIByte2
	//Log {midi note }, MIDIChannel, {-}, MIDIByte2, {-}, MIDIByte3
	if MIDIChannel=lp_ch and MIDICommand=0x90 // Pad Press (NoteOn Msg)
		if msg_type[mb2]=0 and msg_num[mb2]>=0  and on_val[mb2]>=0 
			SendMIDINoteOn out_ch[mb2], msg_num[mb2], on_val[mb2]
		elseif msg_type[mb2]=1 and msg_num[mb2]>=0 and on_val[mb2]>=0
			SendMIDICC out_ch[mb2], msg_num[mb2], on_val[mb2]
		endif
	elseif MIDIChannel=lp_ch and MIDICommand=0x80 //Pad Release (NoteOff Msg)
		if msg_type[mb2]=0 and msg_num[mb2]>=0 and off_val[mb2]>=0
			SendMIDINoteOff out_ch[mb2], msg_num[mb2], off_val[mb2]
		elseif msg_type[mb2]=1 and msg_num[mb2]>=0 and off_val[mb2]>=0
			SendMIDICC out_ch[mb2], msg_num[mb2], off_val[mb2]	
		endif	
	endif
@End

@OnMidiCC
	//Midi cc messages from LP converted to...
	mb1=MIDIByte1
	mb2=MIDIByte2
	mb3=MIDIByte3
	if mb1 <> 176 //ignore 191 messages
		Exit
	endif
	
	//Log {mb1:}, mb1, { mb2:}, mb2, { mb3:}, mb3, { MSGNUM:}, msg_num[mb2], { ONVAL:}, on_val[mb2], { CH:}, out_ch[mb2]
	if MIDIChannel=lp_ch and MIDIByte3>0 //pad press
		if mb2>=95 and mb2<=98 //change mode buttons
			new_mode=lp_modes[mb2-95]
			Call @ChangeMode
		elseif msg_type[mb2]=0 and msg_num[mb2]>=0 and on_val[mb2]>=0
			//Send NoteOn message on pad press
			SendMIDINoteOn out_ch[mb2], msg_num[mb2], on_val[mb2]
		elseif msg_type[mb2]=1 and msg_num[mb2]>=0 and on_val[mb2]>=0
			//Send CC on pad press
			SendMIDICC out_ch[mb2], msg_num[mb2], on_val[mb2]
		endif
	elseif MIDIChannel=lp_ch and MIDIByte3=0 //pad release
	  if msg_type[mb2]=0 and msg_num[mb2]>=0 and off_val[mb2]>=0
			//Send NoteOff message on pad release
			SendMIDINoteOff out_ch[mb2], msg_num[mb2], off_val[mb2]
		elseif msg_type[mb2]=1 and msg_num[mb2]>=0 and off_val[mb2]>=0
			//Send CC on pad release
			SendMIDICC out_ch[mb2], msg_num[mb2], off_val[mb2]	
		endif
	endif
@End

@ChangeMode
	//LP Session Mode
	CopyArray lp_sysex_header, sysex_msg, len_header
	sysex_msg[len_header]=cmd_lp_mode
	sysex_msg[len_header+1]=new_mode
	SendSysex sysex_msg, 8 // reboot layout
@End

@SetupMozaicLayout
	ShowLayout 2
	LabelPads {Launchpad=>OUT helper. Routes messages from the Launchpad out to QK:KNTRL }
@End